version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - TMDB_BEARER_TOKEN=${TMDB_BEARER_TOKEN}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - FRONTEND_URL=http://localhost:3001
      - PORT=8080
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/cinefiles
      - APP_ENV=development
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - NODE_ENV=development
      - APP_ENV=development
      - PORT=3001
      - WDS_SOCKET_PORT=3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cinefiles
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: 